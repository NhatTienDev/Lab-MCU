/*
 * fsm.c
 *
 *  Created on: Nov 30, 2024
 *      Author: Administrator
 */

#include "fsm.h"

extern ADC_HandleTypeDef hadc1;
extern UART_HandleTypeDef huart2;

// Globally use
uint8_t buffer_character;
uint8_t buffer[MAX_BUFFER_SIZE];
uint8_t buffer_index = 0;
uint8_t buffer_flag = 0;

// Locally use
uint8_t status = INIT;
uint8_t command_status = INIT;
uint8_t command_data[MAX_COMMAND_SIZE];
uint8_t command_data_index = 0;
int ADC_value = 0;

bool cmdEqualRST(uint8_t str[])
{
	if(str[0] == 'R' && str[1] == 'S' && str[2] == 'T') return true;
	else return false;
}

bool cmdEqualOK(uint8_t str[])
{
	if(str[0] == 'O' && str[1] == 'K') return true;
	else return false;
}

void command_parser()
{
	switch(status)
	{
		case INIT:
			if(buffer_character == '!') status = READING;
			break;
		case READING:
			if(buffer_character != '!' && buffer_character != '#')
			{
				command_data[command_data_index] = buffer_character;
				command_data_index++;
			}

			if(buffer_character == '#')
			{
				status = PARSING;
				command_data_index = 0;
			}
			break;
		case PARSING:
			if(cmdEqualRST(command_data) == true)
			{
				command_status = RST;
			}

			if(cmdEqualOK(command_data) == true)
			{
				command_status = OK;
			}
			status = INIT;
			break;
		default:
			break;
	}
}

void uart_communication()
{
	char str[100];

	switch(command_status)
	{
		case RST:
			if(timer2_flag == 1)
			{
				ADC_value = HAL_ADC_GetValue(&hadc1);
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "!ADC=%d#\r\n", ADC_value), 1000);
				setTimer2(300);
			}
			break;
		case OK:
			ADC_value = -1;
			command_status = INIT;
			break;
		default:
			break;
	}
}
